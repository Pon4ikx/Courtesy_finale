# Generated by Django 4.2.1 on 2025-05-01 11:25

from decimal import Decimal
from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_name', models.CharField(max_length=40, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=40, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Телефон')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Почта')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Аккаунт',
                'verbose_name_plural': 'Аккаунты',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(help_text='Пример: ул. (Название улицы или проспекта(пр.)), (Номер дома), Город<br>Если в адресе проспект, то надо писать полностью: проспект (Название)', max_length=255, unique=True, verbose_name='Адрес')),
                ('working_hours', models.CharField(blank=True, max_length=100, null=True, verbose_name='Время работы')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Широта')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Долгота')),
            ],
            options={
                'verbose_name': 'Адрес',
                'verbose_name_plural': 'Адреса',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('slug', models.SlugField(blank=True, editable=False, unique=True, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Направление',
                'verbose_name_plural': 'Направления',
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact', models.CharField(max_length=100, unique=True, verbose_name='Данные для связи')),
                ('person', models.CharField(max_length=100, verbose_name='Человек для связи')),
                ('what_doing', models.CharField(default='', max_length=100, verbose_name='Занятость')),
            ],
            options={
                'verbose_name': 'Контакт',
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('main_image', models.ImageField(upload_to='news_images/', verbose_name='Главное фото')),
                ('content', models.TextField(verbose_name='Содержимое')),
                ('published_date', models.DateField(verbose_name='Дата публикации')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Слаг')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('link', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ссылка')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=200, unique=True, verbose_name='Слаг')),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Цена')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='users.category', verbose_name='Направление')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='specialists/photos/', verbose_name='Фото')),
                ('last_name', models.CharField(max_length=40, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=40, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='Отчество')),
                ('slug', models.SlugField(blank=True, editable=False, unique=True, verbose_name='Слаг')),
                ('speciality', models.CharField(max_length=200, verbose_name='Специальность')),
                ('experience', models.CharField(max_length=25, verbose_name='Стаж работы')),
                ('dop_info', models.TextField(blank=True, verbose_name='Дополнительная информация')),
                ('display_on_main', models.BooleanField(default=False, verbose_name='Отображать на главной странице')),
                ('appointment_duration', models.PositiveIntegerField(default=20, verbose_name='Длительность приёма (в минутах)')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='specialists', to='users.category', verbose_name='Направление')),
            ],
            options={
                'verbose_name': 'Специалист',
                'verbose_name_plural': 'Специалисты',
            },
        ),
        migrations.CreateModel(
            name='Talon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата приёма')),
                ('cabinet', models.CharField(max_length=20, verbose_name='Кабинет')),
                ('time', models.TimeField(verbose_name='Время приёма')),
                ('dop_info', models.TextField(blank=True, verbose_name='Дополнительная информация')),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='talons', to='users.specialist', verbose_name='Врач')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='talons', to='users.service', verbose_name='Услуга')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='talons', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Талон',
                'verbose_name_plural': 'Талоны',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(0, 'Оценка не может быть меньше 0.'), django.core.validators.MaxValueValidator(5, 'Оценка не может быть больше 5.')], verbose_name='Оценка')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата')),
                ('content', models.TextField(blank=True, verbose_name='Содержимое')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='EmailConfirmationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Cabinet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10, unique=True, verbose_name='Номер кабинета')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.category', verbose_name='Направление')),
            ],
            options={
                'verbose_name': 'Кабинет',
                'verbose_name_plural': 'Кабинеты',
            },
        ),
        migrations.CreateModel(
            name='SpecialistService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specialists', to='users.service', verbose_name='Услуга')),
                ('specialist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='users.specialist', verbose_name='Специалист')),
            ],
            options={
                'verbose_name': 'Связь специалиста и услуги',
                'verbose_name_plural': 'Связи специалистов и услуг',
                'unique_together': {('specialist', 'service')},
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата')),
                ('start_time', models.TimeField(verbose_name='Время начала')),
                ('end_time', models.TimeField(verbose_name='Время окончания')),
                ('is_day_off', models.BooleanField(default=False, verbose_name='Выходной')),
                ('cabinet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.cabinet', verbose_name='Кабинет')),
                ('specialist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.specialist', verbose_name='Специалист')),
            ],
            options={
                'verbose_name': 'Расписание',
                'verbose_name_plural': 'Расписания',
                'unique_together': {('specialist', 'date')},
            },
        ),
    ]
